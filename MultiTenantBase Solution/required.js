function userLogin(username, password){	//Every login request goes through this function	var token = currentSession().promoteWith('Admin');	//if the username is admin, check credentials with the directory	if(username == 'admin'){		return false;	}	//validate the user credentials	var userCollection = ds.User.query("username == :1", username); //find users with the username. Should only be one.	if(userCollection.length > 1){		// in the event that username becomes not unique		return APP.getError('duplicateUsername');	} else if(userCollection.length == 0 || username == "admin"){		return false; // reverts login to the directory, no matching users	} else {		var loginSuccess = true; //set to false upon a failed test		var theUser = userCollection[0]; //query returns a collection, this give us the entity		//check the validation		if(!theUser.checkPassword(password)){ //checkPassword function is in Project/Model/User/User-methods.js			loginSuccess = false;			loginError = APP.getError("wrongPassword");		};		//do additional checks if needed				if(loginSuccess){			//return a user object			return {				ID: theUser.ID,				name: theUser.username,				fullName: theUser.fullName,				belongsTo: ['User'],				storage: {					accountID: theUser.account.ID,					language: theUser.language				}			};		} else {			//return the error			return loginError;		}	}}